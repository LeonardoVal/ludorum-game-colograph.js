//! ludorum-game-colograph 0.1.0

(function(a){"use strict";"function"==typeof define&&define.amd?define(["creatartis-base","sermat","ludorum"],a):"object"==typeof exports&&module.exports?module.exports=a(require("creatartis-base"),require("sermat"),require("ludorum")):this["ludorum-game-colograph"]=a(this.base,this.Sermat,this.ludorum)}).call(this,function a(b,c,d){"use strict";var e=b.declare,f=b.obj,g=(b.copy,b.raise,b.raiseIf),h=b.Iterable,i=b.iterable,j=d.Game,k=(d.players.UserInterface,{__package__:"ludorum-game-colograph",__name__:"ludorum_game_colograph",__init__:a,__dependencies__:[b,c,d],__SERMAT__:{include:[b,d]}}),l=k.Colograph=e(j,{name:"Colograph",constructor:function(a){j.call(this,a?a.activePlayer:void 0),b.initialize(this,a).object("colours",{defaultValue:{}}).array("edges",{defaultValue:[[1,3],[2],[3],[]]}).array("shapes",{defaultValue:["circle","triangle","square","star"]}).number("scoreSameShape",{defaultValue:-1,coerce:!0}).number("scoreDifferentShape",{defaultValue:-1,coerce:!0})},players:["Red","Blue"],score:function(){var a={},b=this.shapes,c=this.colours,d=this.scoreSameShape,e=this.scoreDifferentShape,f=this.edges.length;return this.players.forEach(function(b){a[b]=f}),i(this.edges).forEach(function(f,g){f.forEach(function(f){var h=g+","+f;c.hasOwnProperty(h)&&(a[c[h]]+=b[g]===b[f]?d:e)})}),a},result:function(){if(this.moves())return null;var a=this.score(),b=this.players;return this.zerosumResult(a[b[0]]-a[b[1]],b[0])},moves:function(){for(var a=this.colours,b=[],c=0,d=this.edges.length;c<d;c++)a.hasOwnProperty(c)||b.push(c);return b.length<1?null:f(this.activePlayer(),b)},next:function(a,b,c){g(b,"Haps are not required (given ",b,")!");var d=this.activePlayer(),e=0|a[d];g(e<0||e>=this.edges.length,"Invalid move: node ",e," does not exist in ",this,"."),g(this.colours.hasOwnProperty(e),"Invalid move: node ",e," has already been coloured in ",this,".");var f=Object.assign({},this.colours);f[e]=d,this.edges[e].forEach(function(a){f[a]===d&&(f[e+","+a]=d)}),this.edges.forEach(function(a,b){b!==e&&a.indexOf(e)>=0&&f[b]===d&&(f[b+","+e]=d)});var h={activePlayer:this.opponent(d),colours:f,edges:this.edges,shapes:this.shapes,scoreSameShape:this.scoreSameShape,scoreDifferentShape:this.scoreDifferentShape};return c?(this.constructor(h),this):new this.constructor(h)},"static __SERMAT__":{identifier:"Colograph",serializer:function(a){return[{activePlayer:a.activePlayer(),colours:a.colours,edges:a.edges,shapes:a.shapes,scoreSameShape:a.scoreSameShape,scoreDifferentShape:a.scoreDifferentShape}]}},edgeColour:function(a,b){var c=this.edges[a].indexOf(b)>=0||this.edges[b].indexOf(a)>=0,d=this.colours[a],e=this.colours[b];return c&&d>=0&&d===e?d:-1},"static heuristics":{scoreDifference:function(a,b){var c=a.score(),d=0;for(var e in c)d+=e===b?c[e]:-c[e];return d/a.edges.length/2}},"static randomGraph":function(a,b,c){a=Math.max(2,+a>>0),b=Math.max(a-1,+b>>0);for(var d,e,f=h.range(a-1).map(function(b){return c.split(1,h.range(b+1,a).toArray())}).toArray(),g=b-(a-1);g>0;g--)d=c.choice(f),d[1].length>0&&(e=c.split(1,d[1]),d[0].push(e[0][0]),d[1]=e[1],g--);return f=f.map(function(a){return a[0]}),f.push([]),f},"static randomGame":function(a){return a=b.initialize({},a).object("random",{defaultValue:b.Randomness.DEFAULT}).integer("nodeCount",{defaultValue:8,coerce:!0}).integer("edgeCount",{defaultValue:11,coerce:!0}).integer("shapeCount",{defaultValue:4,coerce:!0,minimum:1,maximum:4}).array("shapes",{defaultValue:["circle","triangle","square","star"]}).subject,new this({edges:this.randomGraph(a.nodeCount,a.edgeCount,a.random),shapes:a.random.randoms(a.nodeCount,0,a.shapeCount).map(function(b){return a.shapes[0|b]}),scoreSameShape:1})}});d.games.Colograph=l,l.__SERMAT__.identifier=k.__package__+"."+l.__SERMAT__.identifier,k.__SERMAT__.include.push(l),c.include(k),l.prototype.circularArrangement=function(a){a=a||200;var b=2*Math.PI/this.edges.length;return this.edges.map(function(c,d){return[Math.round(a*Math.cos(b*d)),Math.round(a*Math.sin(b*d))]})};var m=k.SVG={HEADER:'<?xml version="1.0" standalone="no"?>\n<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">',SHAPES:{circle:'<circle id="circle-node" r="25px" cx="0" cy="0"/>',square:'<rect id="square-node" width="50" height="50" x="-25" y="-25"/>',star:'<polygon id="star-node" points="0,-24 6,-5 25,-5 10,5 15,24 0,13 -15,24 -10,5 -25,-5 -6,-5"/>',triangle:'<polygon id="triangle-node" points="-25,22 0,-22 25,22"/>',pentagon:'<polygon id="pentagon-node" points="0,-24 25,-5 15,24 -15,24 -25,-5"/>',hexagon:'<polygon id="hexagon-node" points="0,-25 21,-12 21,12 0,25 -21,12 -21,-12"/>'}};return l.prototype.toSVG=function(a,b,c){a=a||500,b=b||500,c=c||this.circularArrangement(Math.max(a,b)/2.5);var d=[m.HEADER,'<svg height="'+b+'px" width="'+a+'px" version="1.1"','\txmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">','\t<style type="text/css" ><![CDATA[',"\t\t.blank-node { stroke:black; stroke-width:2px; fill:white; }","\t\t.blank-node:hover { stroke-width:4px; }","\t\t.blank-edge { stroke:black; stroke-width:2px; }"];this.players.forEach(function(a){var b=a.toLowerCase();d.push("\t\t."+b+"-node { stroke:black; stroke-width:2px; fill:"+b+"}","\t\t."+b+"-edge { stroke:"+b+"; stroke-width:2px }")}),d.push("\t]]></style>"),d.push("\t<defs>");for(var e in m.SHAPES)d.push("\t\t"+m.SHAPES[e]);d.push("\t</defs>",'\t<g id="colograph" transform="translate('+a/2+","+b/2+')">');var f=this.colours;this.edges.forEach(function(a,b){var e=c[b];a.forEach(function(a){var g=c[a],h=f[b+","+a],i=h?h.toLowerCase()+"-edge":"blank-edge";d.push('\t<line class="'+i+'" data-edge="'+JSON.stringify([e,g])+'" x1="'+e[0]+'" y1="'+e[1]+'" x2="'+g[0]+'" y2="'+g[1]+'"/>')})});var g=this.shapes;return this.edges.forEach(function(a,b){var e=c[b],h=f[b],i=h?h.toLowerCase()+"-node":"blank-node";d.push('<use id="node'+b+'" xlink:href="#'+g[b]+'-node" transform="translate('+e.join(",")+')" class="'+i+'" data-ludorum-move="'+b+'"/>')}),d.push("\t</g>","</svg>"),d.join("\n")},l.prototype.ui={},k});
//# sourceMappingURL=ludorum-game-colograph.min.js.map